<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       		http://www.springframework.org/schema/beans/spring-beans.xsd 
       		http://www.springframework.org/schema/context 
       		http://www.springframework.org/schema/context/spring-context.xsd
       		http://www.springframework.org/schema/aop 
       		http://www.springframework.org/schema/aop/spring-aop.xsd
       		http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util-2.0.xsd
			http://www.springframework.org/schema/cache 
        	http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
	default-autowire="byName">

	<!-- Redis Client -->
	<bean id="redisClient"
		class="com.sharding.redis.jedis.support.ShardedRedisClient">
		<!-- 执行模板类 -->
		<property name="template" ref="redisTemplate"/>
	</bean>
	
	<!-- Template -->
	<bean id="redisTemplate" class="com.sharding.redis.jedis.support.ShardedJedisTemplate">
		<!-- Jedis分片分组对象池 -->
		<property name="shardedJedisGroupPool" ref="shardedJedisGroupPool"/>
		<!-- 是否设置读写分离 默认为false 
		<property name="isReadFromSlave" value="false"/>
		-->
		<!-- 多从节点时选择从节点的策略  默认为随机选择
		<property name="loadBalance" value="yourloadBalance"/>
		-->
	</bean>
	
	<bean id="shardedJedisGroupPool" class="com.sharding.redis.jedis.ShardedJedisGroupPool"
	      destroy-method="close">
		<constructor-arg index="0" ref="poolConfig"/>
		<constructor-arg index="1" ref="shardInfos"/>
	</bean>
	
	<!-- 对象池配置 -->
	<bean id="poolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}"/>
     	<property name="minIdle" value="${redis.pool.minIdle}"/>
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
      	<property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
	</bean>
	
	<!-- redis集群分片信息 -->
	<util:list id="shardInfos">
		<!-- 单片配置(一套主从) -->
		<bean class="com.sharding.redis.jedis.JedisGroupShardInfo">
			<!-- 一套主从的名称，注意这个名称一旦使用，不要修改！！会使用这个名称来计算一致性哈希环上的节点位置 -->
			<property name="groupName" value="redis-group-0"/>
			<!-- master节点配置 -->
			<property name="masterInfo">
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg value="redis://${redis.host.master1}"/>
					<property name="soTimeout" value="${redis.soTimeout}" />
					<property name="connectionTimeout" value="${redis.connectionTimeout}" />
				</bean>
			</property>
			<!-- slave节点配置 
			<property name="slaveInfos">
				<util:list>
					<bean class="redis.clients.jedis.JedisShardInfo">
						<constructor-arg value="redis://${redis.host.slave1}"/>
						<property name="soTimeout" value="${redis.soTimeout}" />
						<property name="connectionTimeout" value="${redis.connectionTimeout}" />
					</bean>
					<bean class="redis.clients.jedis.JedisShardInfo">
						<constructor-arg>redis://127.0.0.1:9777</constructor-arg>
					</bean>
					
				</util:list>
			</property>
			-->
		</bean>
		
		<bean class="com.sharding.redis.jedis.JedisGroupShardInfo">
			<!-- 一套主从的名称，注意这个名称一旦使用，不要修改！！会使用这个名称来计算一致性哈希环上的节点位置 -->
			<property name="groupName" value="redis-group-1"/>
			<!-- master节点配置 -->
			<property name="masterInfo">
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg value="redis://${redis.host.master2}"/>
					<property name="soTimeout" value="${redis.soTimeout}" />
					<property name="connectionTimeout" value="${redis.connectionTimeout}" />
				</bean>
			</property>
		</bean>
	</util:list>
	
</beans>